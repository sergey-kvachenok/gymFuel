name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID_STAGING: ${{ secrets.VERCEL_PROJECT_ID_STAGING }}
  VERCEL_PROJECT_ID_PRODUCTION: ${{ secrets.VERCEL_PROJECT_ID_PRODUCTION }}

jobs:
  # Pull Request Checks
  pr-checks:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: npm run lint

      - name: 🧪 Run unit tests
        run: npm test

      - name: 🏗️ Test build
        run: npm run build

      - name: ✅ PR validation complete
        run: echo "🎉 All PR checks passed! Ready for merge."

  # Linting and Testing (for main branch)
  test:
    name: 🧪 Tests & Linting
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: npm run lint

      - name: 🧪 Run unit tests
        run: npm test

      - name: 🏗️ Test build
        run: npm run build

  # Deploy to Staging
  deploy-staging:
    name: 🎭 Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: https://gymfuel-staging.vercel.app
    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔧 Setup Vercel CLI
        run: npm i -g vercel@latest

      - name: 🔗 Link Vercel project (staging)
        run: vercel link --yes --project=${{ secrets.VERCEL_PROJECT_ID_STAGING }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🗄️ Run database migrations (staging)
        run: npm run db:migrate:staging
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}

      - name: 🚀 Deploy to Vercel (staging)
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🎯 Set production alias (staging)
        run: vercel alias --token=${{ secrets.VERCEL_TOKEN }}

      - name: ✅ Staging deployment complete
        run: |
          echo "🎭 Staging deployment successful!"
          echo "🌐 URL: https://gymfuel-staging.vercel.app"
          echo "📋 Manual production deployment available"

  # Deploy to Production (Manual)
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production' && github.event_name == 'workflow_dispatch'
    environment:
      name: production
      url: https://gymfuel.vercel.app
    steps:
      - name: ⚠️ Production deployment warning
        run: |
          echo "🚨 WARNING: Deploying to PRODUCTION environment!"
          echo "🔍 Please ensure staging has been tested thoroughly"
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run pre-production validation
        run: |
          echo "🔍 Running full test suite before production deployment..."
          npm run lint
          npm test
          npm run build

      - name: 🔧 Setup Vercel CLI
        run: npm i -g vercel@latest

      - name: 🔗 Link Vercel project (production)
        run: vercel link --yes --project=${{ secrets.VERCEL_PROJECT_ID_PRODUCTION }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🗄️ Run database migrations (production)
        run: npm run db:migrate:prod
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}

      - name: 🚀 Deploy to Vercel (production)
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: ✅ Production deployment complete
        run: |
          echo "🚀 Production deployment successful!"
          echo "🌐 URL: https://gymfuel.vercel.app"
          echo "🎉 Application is live!"

  # Manual staging deployment
  deploy-staging-manual:
    name: 🎭 Deploy to Staging (Manual)
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'staging' && github.event_name == 'workflow_dispatch'
    environment:
      name: staging
      url: https://gymfuel-staging.vercel.app
    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔧 Setup Vercel CLI
        run: npm i -g vercel@latest

      - name: 🔗 Link Vercel project (staging)
        run: vercel link --yes --project=${{ secrets.VERCEL_PROJECT_ID_STAGING }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🗄️ Run database migrations (staging)
        run: npm run db:migrate:staging
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}

      - name: 🚀 Deploy to Vercel (staging)
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🎯 Set production alias (staging)
        run: vercel alias --token=${{ secrets.VERCEL_TOKEN }}

      - name: ✅ Manual staging deployment complete
        run: |
          echo "🎭 Manual staging deployment successful!"
          echo "🌐 URL: https://gymfuel-staging.vercel.app"
