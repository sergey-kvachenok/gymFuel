name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (staging or production)'
        required: true
        type: string
      is_production:
        description: 'Whether this is a production deployment'
        required: false
        type: boolean
        default: false
      vercel_production:
        description: 'Whether to deploy to Vercel production environment (--prod flag)'
        required: false
        type: boolean
        default: true
      commit-sha:
        description: 'Specific commit SHA to deploy (defaults to latest)'
        required: false
        type: string
    secrets:
      VERCEL_TOKEN:
        required: true
      VERCEL_PROJECT_ID:
        required: true
      DATABASE_URL:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-sha != '' && inputs.commit-sha || github.sha }}

      - name: Display deployment info
        run: |
          echo "ðŸš€ Deploying to: ${{ inputs.environment }}"
          echo "ðŸ“¦ Commit SHA: ${{ inputs.commit-sha || github.sha }}"
          echo "ðŸ”— Commit URL: https://github.com/${{ github.repository }}/commit/${{ inputs.commit-sha || github.sha }}"
          echo "ðŸŽ¯ Vercel production: ${{ inputs.vercel_production }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Vercel CLI
        run: npm i -g vercel@latest

      - name: Link Vercel project
        run: vercel link --yes --project=${{ secrets.VERCEL_PROJECT_ID }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Run Database Migration
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy to Vercel (Preview)
        if: ${{ !inputs.vercel_production }}
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Production)
        if: ${{ inputs.vercel_production }}
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Generate Prisma Client (Production only)
        if: ${{ inputs.is_production }}
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
