name: Deploy to Environments

on:
  workflow_run:
    workflows: ['CI Pipeline']
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production

jobs:
  # Auto-deploy to staging on main branch push (only if CI passed)
  deploy-staging:
    if: github.event.workflow_run.conclusion == 'success'
    uses: ./.github/workflows/deploy-reusable.yml
    with:
      environment: staging
      is_production: false
    secrets:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STAGING }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}

  # Manual deploy to production
  deploy-production:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    uses: ./.github/workflows/deploy-reusable.yml
    with:
      environment: production
      is_production: true
    secrets:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PROD }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}

  # Manual deploy to staging
  deploy-staging-manual:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    uses: ./.github/workflows/deploy-reusable.yml
    with:
      environment: staging
      is_production: false
    secrets:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STAGING }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}
