// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())

  // Relations
  products      Product[]
  consumptions  Consumption[]
  nutritionGoals NutritionGoals?
}

model Product {
  id          Int      @id @default(autoincrement())
  userId      Int
  name        String
  calories    Float
  protein     Float
  fat         Float
  carbs       Float
  createdAt   DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  // Relations
  user         User          @relation(fields: [userId], references: [id])
  consumptions Consumption[]
}

model Consumption {
  id          Int      @id @default(autoincrement())
  userId      Int
  productId   Int
  amount      Float
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  // Relations
  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model NutritionGoals {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  dailyCalories  Float    // Дневная цель по калориям
  dailyProtein   Float    // Дневная цель по белкам (г)
  dailyFat       Float    // Дневная цель по жирам (г)
  dailyCarbs     Float    // Дневная цель по углеводам (г)
  goalType       String   @default("maintain") // "gain", "lose", "maintain"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id])
}
